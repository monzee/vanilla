package ph.codeia.processor;

import com.google.auto.common.MoreElements;

import java.text.SimpleDateFormat;
import java.util.Locale;

import javax.lang.model.element.NestingKind;
import javax.lang.model.element.TypeElement;
import javax.lang.model.util.Elements;

import ph.codeia.values.Do;

/**
 * This file is a part of the vanilla project.
 */

public final class Util {

    static final String SIGNATURE = ""
            + "Generated by vanilla-processor\n"
            + "https://github.com/monzee/vanilla.git\n";

    static final SimpleDateFormat ISO_DATE_FORMAT = new SimpleDateFormat(
            "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
            Locale.US);

    static <T> boolean forSome(T nullable, Do.Just<T> fun) {
        if (nullable != null) {
            fun.got(nullable);
            return true;
        }
        return false;
    }

    static String quote(String identifier) {
        return "\"" + identifier.replace("\"", "\"\"") + "\"";
    }

    static String nameAfter(TypeElement queryType, String suffix) {
        StringBuilder parts = new StringBuilder(suffix);
        while (queryType.getNestingKind() != NestingKind.TOP_LEVEL) {
            parts.insert(0, '$');
            parts.insert(1, queryType.getSimpleName().toString());
            queryType = MoreElements.asType(queryType.getEnclosingElement());
        }
        parts.insert(0, queryType.getSimpleName().toString());
        return parts.toString();
    }

    private Util() {}

}
