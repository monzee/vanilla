apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

group = 'ph.codeia.vanilla'
version = LIBRARY_VERSION

android {
    compileSdkVersion 25
    buildToolsVersion "24.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "v$LIBRARY_VERSION"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

publishing {
    repositories.maven {
        name "tmp"
        url "file:///tmp"
    }

    publications {
        android.libraryVariants.all { variant ->
            def name = variant.name

            def docs = task("doc-$name",
                    type: Javadoc,
                    dependsOn: [variant.assemble, ':vanilla-core:javadoc'],
                    group: 'documentation'
            ) {
                source = variant.javaCompile.source
                classpath += files(variant.javaCompile.classpath.files, android.getBootClasspath())
                title = 'Vanilla Android'
                options {
                    links '../../../../vanilla-core/build/docs/javadoc'
                    links 'https://developer.android.com/reference'
                }
                exclude '**/BuildConfig.java'
                exclude '**/R.java'
            }

            def docJar = task("docjar-$name", type: Jar, dependsOn: docs, group: 'publishing') {
                classifier 'javadoc'
                from docs.destinationDir
            }

            def sourceJar = task("source-$name", type: Jar, group: 'publishing') {
                classifier 'sources'
                from variant.javaCompile.source
            }

            create(name, MavenPublication) {
                artifact variant.outputs[0].outputFile
                artifact sourceJar
                artifact docJar
                pom.withXml {
                    def node = asNode().appendNode('dependencies')
                    configurations.compile.allDependencies.findAll {
                        it instanceof ExternalModuleDependency || it instanceof ProjectDependency
                    }.each {
                        def n = node.appendNode('dependency')
                        n.appendNode('groupId', it.group)
                        n.appendNode('artifactId', it.name)
                        if (it.version != null && !"unspecified".equals(it.version)) {
                            n.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    compile project(':vanilla-core')
    provided 'com.android.support:appcompat-v7:25.0.0'
    testCompile 'junit:junit:4.12'
}
