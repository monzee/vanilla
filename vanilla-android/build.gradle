apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

group = 'ph.codeia.vanilla'
version = LIBRARY_VERSION

android {
    compileSdkVersion 25
    buildToolsVersion '24.0.2'

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 25
        versionCode 1
        versionName "v$LIBRARY_VERSION"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile project(':vanilla-core')
    provided 'com.android.support:appcompat-v7:25.0.0'
}

publishing {
    repositories {
        maven {
            name 'tmp'
            url 'file:///tmp'
        }

        maven {
            name 'bintray'
            url 'https://api.bintray.com/maven/monzee/jvm/vanilla-android/'
            credentials {
                username = BINTRAY_USER
                password = BINTRAY_API_KEY
            }
        }
    }

    publications {
        android.libraryVariants.all { variant ->
            if (variant.buildType.name != 'release') {
                return
            }

            def name = variant.name
            def deps = variant.variantData.variantDependency.compileDependencies
            def allDeps = deps.androidDependencies + deps.jarDependencies
            def javac = variant.javaCompile
            def docs = task("doc-$name", type: Javadoc, group: 'documentation') {
                source = javac.source
                classpath += javac.classpath + files(android.bootClasspath)
                title = 'Vanilla Android'
                options {
                    links '../../../../vanilla-core/build/docs/javadoc'
                    links 'https://developer.android.com/reference'
                }
                exclude '**/BuildConfig.java'
                exclude '**/R.java'
            }.dependsOn javac, ':vanilla-core:javadoc'

            "$name"(MavenPublication) {
                artifact source: variant.outputs[0].outputFile, builtBy: variant.assemble

                artifact task("source-$name", type: Jar, group: 'publishing') {
                    classifier 'sources'
                    from javac.source
                }

                artifact task("docjar-$name", type: Jar, dependsOn: docs, group: 'publishing') {
                    classifier 'javadoc'
                    from docs.destinationDir
                }

                pom.withXml {
                    def node = asNode().appendNode('dependencies')
                    allDeps.findAll { !it.provided }.resolvedCoordinates.each {
                        def n = node.appendNode('dependency')
                        n.appendNode('groupId', it.groupId)
                        n.appendNode('artifactId', it.artifactId)
                        n.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}
